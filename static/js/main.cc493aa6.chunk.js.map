{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","id","value","Board","i","idString","toString","this","squares","console","log","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","idList","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc493aa6.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { nextId, useId } from 'react-id-generator';\n\nfunction Square(props) {\n\treturn (\n\t\t<button className=\"square\" onClick={props.onClick} id={props.id}>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n}\n\nclass Board extends React.Component {\n\trenderSquare(i) {\n\t\tconst idString = 'test-id-square-' + i.toString();\n\t\treturn <Square id={idString} value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />;\n\t}\n\n\trender() {\n\t\tconsole.log(1);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n/*\nfunction getIdList(props) {\n\treturn useId(10, 'test-id-moves-');\n}\n*/\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// const idListTmp = getIdList();\n\t\tthis.state = {\n\t\t\thistory: [\n\t\t\t\t{\n\t\t\t\t\tsquares: Array(9).fill(null)\n\t\t\t\t}\n\t\t\t],\n\t\t\tstepNumber: 0,\n\t\t\txIsNext: true,\n\t\t\tidList: [ 'id0', 'id1', 'id2', 'id3', 'id4', 'id5', 'id6', 'id7', 'id8', 'id9' ] // this.getIdList()\n\t\t};\n\t}\n\n\thandleClick(i) {\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst squares = current.squares.slice();\n\n\t\tif (calculateWinner(squares) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: squares\n\t\t\t\t}\n\t\t\t]),\n\t\t\tstepNumber: history.length,\n\t\t\txIsNext: !this.state.xIsNext\n\t\t});\n\t}\n\n\tjumpTo(step) {\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: step % 2 === 0\n\t\t});\n\t}\n\n\trender() {\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ? 'Go to move #' + move : 'Go to game start';\n\t\t\treturn (\n\t\t\t\t<li key={move}>\n\t\t\t\t\t<button id={this.state.idList[move]} onClick={() => this.jumpTo(move)}>\n\t\t\t\t\t\t{desc}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\tlet status;\n\t\tif (winner) {\n\t\t\tstatus = 'Winner: ' + winner;\n\t\t} else {\n\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<div id=\"test-id-status-1\">{status}</div>\n\t\t\t\t\t<ol>{moves}</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction calculateWinner(squares) {\n\tconst lines = [\n\t\t[ 0, 1, 2 ],\n\t\t[ 3, 4, 5 ],\n\t\t[ 6, 7, 8 ],\n\t\t[ 0, 3, 6 ],\n\t\t[ 1, 4, 7 ],\n\t\t[ 2, 5, 8 ],\n\t\t[ 0, 4, 8 ],\n\t\t[ 2, 4, 6 ]\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [ a, b, c ] = lines[i];\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn null;\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}